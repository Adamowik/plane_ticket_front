{"ast":null,"code":"import _classCallCheck from \"C:/Users/AdamWo\\u017Aniakowski/Desktop/Studia/AI/plane-tickets-app-master(front)/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { Injectable, Inject, Optional, PLATFORM_ID, NgZone, ɵɵdefineInjectable, ɵɵinject, NgModule } from '@angular/core';\nimport firebase from 'firebase/app';\nimport { of, EMPTY, throwError, Observable, concat } from 'rxjs';\nimport { subscribeOn, observeOn, switchMap, map, shareReplay, defaultIfEmpty, switchMapTo, catchError, mergeMap } from 'rxjs/operators';\nimport { ɵAngularFireSchedulers, ɵfirebaseAppFactory, ɵlazySDKProxy, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire';\nimport { isPlatformServer } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * Generated from: messaging.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// WARNING: interface has both a type and a value, skipping emit\n\nimport * as ɵngcc0 from '@angular/core';\n\nvar AngularFireMessaging =\n/**\n * @param {?} options\n * @param {?} nameOrConfig\n * @param {?} platformId\n * @param {?} zone\n */\nfunction AngularFireMessaging(options, nameOrConfig, // tslint:disable-next-line:ban-types\nplatformId, zone) {\n  var _this = this;\n\n  _classCallCheck(this, AngularFireMessaging);\n\n  /** @type {?} */\n  var schedulers = new ɵAngularFireSchedulers(zone);\n  /** @type {?} */\n\n  var messaging = of(undefined).pipe(subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular), switchMap(\n  /**\n  * @return {?}\n  */\n  function () {\n    return isPlatformServer(platformId) ? EMPTY : import('firebase/messaging');\n  }), map(\n  /**\n  * @return {?}\n  */\n  function () {\n    return ɵfirebaseAppFactory(options, zone, nameOrConfig);\n  }), map(\n  /**\n  * @param {?} app\n  * @return {?}\n  */\n  function (app) {\n    return app.messaging();\n  }), shareReplay({\n    bufferSize: 1,\n    refCount: false\n  }));\n  this.requestPermission = messaging.pipe(subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular), // tslint:disable-next-line\n  switchMap(\n  /**\n  * @param {?} messaging\n  * @return {?}\n  */\n  function (messaging) {\n    return firebase.messaging.isSupported() ? messaging.requestPermission() : throwError('Not supported.');\n  }));\n  this.getToken = messaging.pipe(subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular), switchMap(\n  /**\n  * @param {?} messaging\n  * @return {?}\n  */\n  function (messaging) {\n    return firebase.messaging.isSupported() && Notification.permission === 'granted' ? messaging.getToken() : EMPTY;\n  }), defaultIfEmpty(null));\n  /** @type {?} */\n\n  var tokenChanges = messaging.pipe(subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular), switchMap(\n  /**\n  * @param {?} messaging\n  * @return {?}\n  */\n  function (messaging) {\n    return firebase.messaging.isSupported() ? new Observable(\n    /**\n    * @param {?} emitter\n    * @return {?}\n    */\n    function (emitter) {\n      return messaging.onTokenRefresh(emitter.next, emitter.error, emitter.complete);\n    }) : EMPTY;\n  }), switchMapTo(this.getToken));\n  this.tokenChanges = messaging.pipe(subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular), switchMap(\n  /**\n  * @param {?} messaging\n  * @return {?}\n  */\n  function (messaging) {\n    return firebase.messaging.isSupported() ? concat(_this.getToken, tokenChanges) : EMPTY;\n  }));\n  this.messages = messaging.pipe(subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular), switchMap(\n  /**\n  * @param {?} messaging\n  * @return {?}\n  */\n  function (messaging) {\n    return firebase.messaging.isSupported() ? new Observable(\n    /**\n    * @param {?} emitter\n    * @return {?}\n    */\n    function (emitter) {\n      return messaging.onMessage(\n      /**\n      * @param {?} next\n      * @return {?}\n      */\n      function (next) {\n        return emitter.next(next);\n      },\n      /**\n      * @param {?} err\n      * @return {?}\n      */\n      function (err) {\n        return emitter.error(err);\n      },\n      /**\n      * @return {?}\n      */\n      function () {\n        return emitter.complete();\n      });\n    }) : EMPTY;\n  }));\n  this.requestToken = of(undefined).pipe(switchMap(\n  /**\n  * @return {?}\n  */\n  function () {\n    return _this.requestPermission;\n  }), catchError(\n  /**\n  * @return {?}\n  */\n  function () {\n    return of(null);\n  }), mergeMap(\n  /**\n  * @return {?}\n  */\n  function () {\n    return _this.tokenChanges;\n  }));\n\n  this.deleteToken =\n  /**\n  * @param {?} token\n  * @return {?}\n  */\n  function (token) {\n    return messaging.pipe(subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular), switchMap(\n    /**\n    * @param {?} messaging\n    * @return {?}\n    */\n    function (messaging) {\n      return messaging.deleteToken(token);\n    }), defaultIfEmpty(false));\n  };\n\n  return ɵlazySDKProxy(this, messaging, zone);\n};\n\nAngularFireMessaging.ɵfac = function AngularFireMessaging_Factory(t) {\n  return new (t || AngularFireMessaging)(ɵngcc0.ɵɵinject(FIREBASE_OPTIONS), ɵngcc0.ɵɵinject(FIREBASE_APP_NAME, 8), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n/** @nocollapse */\n\n\nAngularFireMessaging.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [FIREBASE_OPTIONS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [FIREBASE_APP_NAME]\n    }]\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: NgZone\n  }];\n};\n/** @nocollapse */\n\n\nAngularFireMessaging.ɵprov = ɵɵdefineInjectable({\n  factory: function AngularFireMessaging_Factory() {\n    return new AngularFireMessaging(ɵɵinject(FIREBASE_OPTIONS), ɵɵinject(FIREBASE_APP_NAME, 8), ɵɵinject(PLATFORM_ID), ɵɵinject(NgZone));\n  },\n  token: AngularFireMessaging,\n  providedIn: \"any\"\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AngularFireMessaging, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'any'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [FIREBASE_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [FIREBASE_APP_NAME]\n      }]\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n\nif (false) {\n  /** @type {?} */\n  AngularFireMessaging.prototype.requestPermission;\n  /** @type {?} */\n\n  AngularFireMessaging.prototype.getToken;\n  /** @type {?} */\n\n  AngularFireMessaging.prototype.tokenChanges;\n  /** @type {?} */\n\n  AngularFireMessaging.prototype.messages;\n  /** @type {?} */\n\n  AngularFireMessaging.prototype.requestToken;\n  /** @type {?} */\n\n  AngularFireMessaging.prototype.deleteToken;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: messaging.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar AngularFireMessagingModule = function AngularFireMessagingModule() {\n  _classCallCheck(this, AngularFireMessagingModule);\n};\n\nAngularFireMessagingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: AngularFireMessagingModule\n});\nAngularFireMessagingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function AngularFireMessagingModule_Factory(t) {\n    return new (t || AngularFireMessagingModule)();\n  },\n  providers: [AngularFireMessaging]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AngularFireMessagingModule, [{\n    type: NgModule,\n    args: [{\n      providers: [AngularFireMessaging]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: angular-fire-messaging.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { AngularFireMessaging, AngularFireMessagingModule };","map":{"version":3,"sources":["../../../src/messaging/messaging.ts","../../../src/messaging/messaging.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Inject, Injectable, NgZone, Optional, PLATFORM_ID } from '@angular/core';\nimport { messaging } from 'firebase/app';\nimport firebase from 'firebase/app';\nimport { concat, EMPTY, Observable, of, throwError, fromEvent } from 'rxjs';\nimport { catchError, defaultIfEmpty, map, mergeMap, observeOn, switchMap, switchMapTo, shareReplay, filter, subscribeOn } from 'rxjs/operators';\nimport {\n  FIREBASE_APP_NAME,\n  FIREBASE_OPTIONS,\n  FirebaseAppConfig,\n  FirebaseOptions,\n  ɵAngularFireSchedulers,\n  ɵfirebaseAppFactory,\n  ɵlazySDKProxy,\n  ɵPromiseProxy\n} from '@angular/fire';\nimport { isPlatformServer } from '@angular/common';\n\nexport interface AngularFireMessaging extends Omit<ɵPromiseProxy<messaging.Messaging>, 'deleteToken' | 'getToken' | 'requestPermission'> {\n}\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireMessaging {\n\n  public readonly requestPermission: Observable<void>;\n  public readonly getToken: Observable<string | null>;\n  public readonly tokenChanges: Observable<string | null>;\n  public readonly messages: Observable<{}>;\n  public readonly requestToken: Observable<string | null>;\n  public readonly deleteToken: (token: string) => Observable<boolean>;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options: FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig: string | FirebaseAppConfig | null | undefined,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone\n  ) {\n    const schedulers = new ɵAngularFireSchedulers(zone);\n\n    const messaging = of(undefined).pipe(\n      subscribeOn(schedulers.outsideAngular),\n      observeOn(schedulers.insideAngular),\n      switchMap(() => isPlatformServer(platformId) ? EMPTY : import('firebase/messaging')),\n      map(() => ɵfirebaseAppFactory(options, zone, nameOrConfig)),\n      map(app => app.messaging()),\n      shareReplay({ bufferSize: 1, refCount: false })\n    );\n\n    this.requestPermission = messaging.pipe(\n      subscribeOn(schedulers.outsideAngular),\n      observeOn(schedulers.insideAngular),\n      // tslint:disable-next-line\n      switchMap(messaging => firebase.messaging.isSupported() ? messaging.requestPermission() : throwError('Not supported.'))\n    );\n\n    this.getToken = messaging.pipe(\n      subscribeOn(schedulers.outsideAngular),\n      observeOn(schedulers.insideAngular),\n      switchMap(messaging => firebase.messaging.isSupported() && Notification.permission === 'granted' ? messaging.getToken() : EMPTY),\n      defaultIfEmpty(null)\n    );\n\n    const tokenChanges = messaging.pipe(\n      subscribeOn(schedulers.outsideAngular),\n      observeOn(schedulers.insideAngular),\n      switchMap(messaging => firebase.messaging.isSupported() ? new Observable<string>(emitter =>\n        messaging.onTokenRefresh(emitter.next, emitter.error, emitter.complete)\n      ) : EMPTY),\n      switchMapTo(this.getToken)\n    );\n\n    this.tokenChanges = messaging.pipe(\n      subscribeOn(schedulers.outsideAngular),\n      observeOn(schedulers.insideAngular),\n      switchMap(messaging => firebase.messaging.isSupported() ? concat(this.getToken, tokenChanges) : EMPTY)\n    );\n\n\n    this.messages = messaging.pipe(\n      subscribeOn(schedulers.outsideAngular),\n      observeOn(schedulers.insideAngular),\n      switchMap(messaging => firebase.messaging.isSupported() ? new Observable<string>(emitter =>\n        messaging.onMessage(next => emitter.next(next), err => emitter.error(err), () => emitter.complete())\n      ) : EMPTY),\n    );\n\n    this.requestToken = of(undefined).pipe(\n      switchMap(() => this.requestPermission),\n      catchError(() => of(null)),\n      mergeMap(() => this.tokenChanges)\n    );\n\n    this.deleteToken = (token: string) => messaging.pipe(\n      subscribeOn(schedulers.outsideAngular),\n      observeOn(schedulers.insideAngular),\n      switchMap(messaging => messaging.deleteToken(token)),\n      defaultIfEmpty(false)\n    );\n\n    return ɵlazySDKProxy(this, messaging, zone);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AngularFireMessaging } from './messaging';\n\n@NgModule({\n  providers: [ AngularFireMessaging ]\n})\nexport class AngularFireMessagingModule { }\n"]},"metadata":{},"sourceType":"module"}