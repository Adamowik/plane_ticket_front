{"ast":null,"code":"import _classCallCheck from \"C:/Users/AdamWo\\u017Aniakowski/Desktop/Studia/AI/plane-tickets-app-master(front)/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/AdamWo\\u017Aniakowski/Desktop/Studia/AI/plane-tickets-app-master(front)/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport * as ɵngcc0 from '@angular/core';\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { Injectable, Inject, Optional, NgZone, PLATFORM_ID } from '@angular/core';\nimport { getRef } from './utils';\nimport { createListReference } from './list/create-reference';\nimport { createObjectReference } from './object/create-reference';\nimport { RealtimeDatabaseURL, FIREBASE_OPTIONS, FIREBASE_APP_NAME, DATABASE_URL, _firebaseAppFactory, ɵkeepUnstableUntilFirstFactory, ɵAngularFireSchedulers } from '@angular/fire';\n\nvar AngularFireDatabase = /*#__PURE__*/function () {\n  function AngularFireDatabase(options, nameOrConfig, databaseURL, platformId, zone) {\n    _classCallCheck(this, AngularFireDatabase);\n\n    this.schedulers = new ɵAngularFireSchedulers(zone);\n    this.keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(this.schedulers, platformId);\n    this.database = zone.runOutsideAngular(function () {\n      var app = _firebaseAppFactory(options, zone, nameOrConfig);\n\n      return app.database(databaseURL || undefined);\n    });\n  }\n\n  _createClass(AngularFireDatabase, [{\n    key: \"list\",\n    value: function list(pathOrRef, queryFn) {\n      var ref = getRef(this.database, pathOrRef);\n      var query = ref;\n\n      if (queryFn) {\n        query = queryFn(ref);\n      }\n\n      return createListReference(query, this);\n    }\n  }, {\n    key: \"object\",\n    value: function object(pathOrRef) {\n      var ref = getRef(this.database, pathOrRef);\n      return createObjectReference(ref, this);\n    }\n  }, {\n    key: \"createPushId\",\n    value: function createPushId() {\n      return this.database.ref().push().key;\n    }\n  }]);\n\n  return AngularFireDatabase;\n}();\n\nAngularFireDatabase.ɵfac = function AngularFireDatabase_Factory(t) {\n  return new (t || AngularFireDatabase)(ɵngcc0.ɵɵinject(FIREBASE_OPTIONS), ɵngcc0.ɵɵinject(FIREBASE_APP_NAME, 8), ɵngcc0.ɵɵinject(DATABASE_URL, 8), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\nAngularFireDatabase.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: AngularFireDatabase,\n  factory: function factory(t) {\n    return AngularFireDatabase.ɵfac(t);\n  }\n});\nAngularFireDatabase = __decorate([__param(0, Inject(FIREBASE_OPTIONS)), __param(1, Optional()), __param(1, Inject(FIREBASE_APP_NAME)), __param(2, Optional()), __param(2, Inject(DATABASE_URL)), __param(3, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [Object, Object, Object, Object, NgZone])], AngularFireDatabase);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AngularFireDatabase, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [FIREBASE_OPTIONS]\n      }]\n    }, {\n      type: Object,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [FIREBASE_APP_NAME]\n      }]\n    }, {\n      type: Object,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DATABASE_URL]\n      }]\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n\nexport { AngularFireDatabase };\nexport { RealtimeDatabaseURL, DATABASE_URL, DATABASE_URL as URL };","map":{"version":3,"sources":["../../../../src/database/database.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,UAAT,EAAqB,MAArB,EAA6B,QAA7B,EAAuC,MAAvC,EAA+C,WAA/C,QAAkE,eAAlE;AAEA,SAAS,MAAT,QAAuB,SAAvB;AACA,SAAS,mBAAT,QAAoC,yBAApC;AACA,SAAS,qBAAT,QAAsC,2BAAtC;AACA,SAA+D,mBAA/D,EAAoF,gBAApF,EAAsG,iBAAtG,EAAyH,YAAzH,EAAuI,mBAAvI,EAA4J,8BAA5J,EAA4L,sBAA5L,QAA0N,eAA1N;;AAIA,IAAa,mBAAb;AAME,+BAC4B,OAD5B,EAEyC,YAFzC,EAGoC,WAHpC,EAIuB,UAJvB,EAKE,IALF,EAKc;AAAA;;AAEZ,SAAK,UAAL,GAAkB,IAAI,sBAAJ,CAA2B,IAA3B,CAAlB;AACA,SAAK,sBAAL,GAA8B,8BAA8B,CAAC,KAAK,UAAN,EAAkB,UAAlB,CAA5D;AAEA,SAAK,QAAL,GAAgB,IAAI,CAAC,iBAAL,CAAuB,YAAK;AAC1C,UAAM,GAAG,GAAG,mBAAmB,CAAC,OAAD,EAAU,IAAV,EAAgB,YAAhB,CAA/B;;AACA,aAAO,GAAG,CAAC,QAAJ,CAAa,WAAW,IAAI,SAA5B,CAAP;AACD,KAHe,CAAhB;AAID;;AApBH;AAAA;AAAA,yBAsBU,SAtBV,EAsBoC,OAtBpC,EAsBqD;AACjD,UAAM,GAAG,GAAG,MAAM,CAAC,KAAK,QAAN,EAAgB,SAAhB,CAAlB;AACA,UAAI,KAAK,GAAkB,GAA3B;;AACA,UAAG,OAAH,EAAY;AACV,QAAA,KAAK,GAAG,OAAO,CAAC,GAAD,CAAf;AACD;;AACD,aAAO,mBAAmB,CAAI,KAAJ,EAAW,IAAX,CAA1B;AACD;AA7BH;AAAA;AAAA,2BA+BY,SA/BZ,EA+BoC;AAChC,UAAM,GAAG,GAAG,MAAM,CAAC,KAAK,QAAN,EAAgB,SAAhB,CAAlB;AACA,aAAO,qBAAqB,CAAI,GAAJ,EAAS,IAAT,CAA5B;AACD;AAlCH;AAAA;AAAA,mCAoCc;AACV,aAAO,KAAK,QAAL,CAAc,GAAd,GAAoB,IAApB,GAA2B,GAAlC;AACD;AAtCH;;AAAA;AAAA,GAAA;;;;;;;;;;AAwCC;;AAxCY,mBAAmB,GAAA,UAAA,CAA5B,CADH,OAAA,CAAA,CAAA,EAAU,MAQA,CAAC,gBAAD,CARV,CACG,EAQC,OAAA,CAAA,CAAA,EAAA,QAAQ,EAAR,CARD,EAQa,OAAA,CAAA,CAAA,EAAA,MAAM,CAAC,iBAAD,CAAN,CARb,EASC,OAAA,CAAA,CAAA,EAAA,QAAQ,EAAR,CATD,EASa,OAAA,CAAA,CAAA,EAAA,MAAM,CAAC,YAAD,CAAN,CATb,EAUC,OAAA,CAAA,CAAA,EAAA,MAAM,CAAC,WAAD,CAAN,CAVD,EAUsB,UAAA,CAAA,mBAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAW,MAAX,EAChB,MADgB,CAAA,CAVtB,CAA4B,EAAnB,mBAAmB,CAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCb,C;;AACA,SA1Ca,mBA0Cb;AAaA,SAAS,mBAAT,EAA8B,YAA9B,EAA4C,YAAY,IAAI,GAA5D","sourcesContent":["import { Injectable, Inject, Optional, NgZone, PLATFORM_ID } from '@angular/core';\nimport { DatabaseQuery, PathReference, QueryFn, AngularFireList, AngularFireObject } from './interfaces';\nimport { getRef } from './utils';\nimport { createListReference } from './list/create-reference';\nimport { createObjectReference } from './object/create-reference';\nimport { FirebaseDatabase, FirebaseOptions, FirebaseAppConfig, RealtimeDatabaseURL, FIREBASE_OPTIONS, FIREBASE_APP_NAME, DATABASE_URL, _firebaseAppFactory, ɵkeepUnstableUntilFirstFactory, ɵAngularFireSchedulers } from '@angular/fire';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AngularFireDatabase {\n  public readonly database: FirebaseDatabase;\n\n  public readonly schedulers: ɵAngularFireSchedulers;\n  public readonly keepUnstableUntilFirst: <T>(obs$: Observable<T>) => Observable<T>;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options:FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig:string|FirebaseAppConfig|null|undefined,\n    @Optional() @Inject(DATABASE_URL) databaseURL:string|null,\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone\n  ) {\n    this.schedulers = new ɵAngularFireSchedulers(zone);\n    this.keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(this.schedulers, platformId);\n\n    this.database = zone.runOutsideAngular(() => {\n      const app = _firebaseAppFactory(options, zone, nameOrConfig);\n      return app.database(databaseURL || undefined);\n    });\n  }\n\n  list<T>(pathOrRef: PathReference, queryFn?: QueryFn): AngularFireList<T> {\n    const ref = getRef(this.database, pathOrRef);\n    let query: DatabaseQuery = ref;\n    if(queryFn) {\n      query = queryFn(ref);\n    }\n    return createListReference<T>(query, this);\n  }\n\n  object<T>(pathOrRef: PathReference): AngularFireObject<T>  {\n    const ref = getRef(this.database, pathOrRef);\n    return createObjectReference<T>(ref, this);\n  }\n\n  createPushId() {\n    return this.database.ref().push().key;\n  }\n\n}\n\nexport {\n  PathReference,\n  DatabaseSnapshot,\n  ChildEvent,\n  ListenEvent,\n  QueryFn,\n  AngularFireList,\n  AngularFireObject,\n  AngularFireAction,\n  Action,\n  SnapshotAction\n} from './interfaces';\n\nexport { RealtimeDatabaseURL, DATABASE_URL, DATABASE_URL as URL };\n"]},"metadata":{},"sourceType":"module"}